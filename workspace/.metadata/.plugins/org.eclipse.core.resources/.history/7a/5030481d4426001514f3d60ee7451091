package ba.bitcamp.vjezbeW8D4;

import java.util.ArrayList;

public class Firm {

	private ArrayList<Employee> developers;

	public Firm() {
		this.developers = new ArrayList<Employee>();
	}

	public void hireEmployee(Employee employee) {
		for (int i = 0; i < developers.size(); i++) {
			if (employee.equals(developers.get(i))) {
				System.out.println("That person is already hired!");
			}
		}
		developers.add(employee);
	}

	public void fireEmployee(Employee employee) {
		for (int i = 0; i < developers.size(); i++) {
			if (!employee.equals(developers.get(i))) {
				System.out.println("That person doesn't work here at all!");
			}
		}
		developers.remove(employee);
	}

	public boolean isWorkingHere(Employee employee) {
		for (int i = 0; i < developers.size(); i++) {
			if (employee.equals(developers.get(i))) {
				return true;
			}
		}
		return false;
	}

	public boolean hasFemaleEmployees() {
		for (int i = 0; i < developers.size(); i++) {
			if (developers.get(i).getGender().equals("Female")) {
				return true;
			}
		}
		return false;
	}

	public void sortIDByUsingSelectionSort() {
		for (int i = 0; i < developers.size() - 1; i++) {
			int minIndex = findSmallestElementInRange(developers, i);

			Employee temp = developers.get(i);
			developers.set(i, developers.get(minIndex));
			developers.set(minIndex, temp);
		}
	}

	private int findSmallestElementInRange(ArrayList<Employee> developers2,
			int i) {
		int minIndex = i;
		for (int i1 = i; i1 < developers.size(); i1++) {
			if (developers.get(i1).getiD() < developers.get(minIndex).getiD()) {
				minIndex = i1;
			}
		}
		return minIndex;
		
	}
}
